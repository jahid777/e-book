[{"D:\\web sites for pratices\\react_qrcode_generation_scanner\\src\\index.js":"1","D:\\web sites for pratices\\react_qrcode_generation_scanner\\src\\reportWebVitals.js":"2","D:\\web sites for pratices\\react_qrcode_generation_scanner\\src\\App.js":"3","D:\\web sites for pratices\\react_qrcode_generation_scanner\\src\\Components\\Home\\Home.js":"4","D:\\web sites for pratices\\react_qrcode_generation_scanner\\src\\Components\\Qr\\Qr.js":"5"},{"size":517,"mtime":1650353179500,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1650353179501,"results":"8","hashOfConfig":"7"},{"size":460,"mtime":1650359442110,"results":"9","hashOfConfig":"7"},{"size":142,"mtime":1650355233375,"results":"10","hashOfConfig":"7"},{"size":3617,"mtime":1650359442112,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kx99cl",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"D:\\web sites for pratices\\react_qrcode_generation_scanner\\src\\index.js",[],"D:\\web sites for pratices\\react_qrcode_generation_scanner\\src\\reportWebVitals.js",[],"D:\\web sites for pratices\\react_qrcode_generation_scanner\\src\\App.js",["24"],"D:\\web sites for pratices\\react_qrcode_generation_scanner\\src\\Components\\Home\\Home.js",[],"D:\\web sites for pratices\\react_qrcode_generation_scanner\\src\\Components\\Qr\\Qr.js",["25","26","27","28","29","30","31","32","33","34","35"],"import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  makeStyles,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport QRCode from \"qrcode\";\r\nimport QrReader from \"react-qr-reader\";\r\n\r\nconst Qr = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [scanResultFile, setScanResultFile] = useState(\"\");\r\n  const [scanResultWebCam, setScanResultWebCam] = useState(\"\");\r\n  const classes = useStyles();\r\n  const qrRef = useRef(null);\r\n\r\n  const generateQrCode = async () => {\r\n    try {\r\n      const response = await QRCode.toDataURL(text);\r\n      setImageUrl(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const handleErrorFile = (error) => {\r\n    console.log(error);\r\n  };\r\n  const handleScanFile = (result) => {\r\n    if (result) {\r\n      setScanResultFile(result);\r\n    }\r\n  };\r\n  const onScanFile = () => {\r\n    qrRef.current.openImageDialog();\r\n  };\r\n  const handleErrorWebCam = (error) => {\r\n    console.log(error);\r\n  };\r\n  const handleScanWebCam = (result) => {\r\n    if (result) {\r\n      setScanResultWebCam(result);\r\n    }\r\n  };\r\n  return (\r\n    <Container className={classes.conatiner}>\r\n      <Card>\r\n        <h2 className={classes.title}>\r\n          Generate Download & Scan QR Code with React js\r\n        </h2>\r\n        <CardContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\r\n              <TextField\r\n                label=\"Enter Text Here\"\r\n                onChange={(e) => setText(e.target.value)}\r\n              />\r\n              <Button\r\n                className={classes.btn}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => generateQrCode()}\r\n              >\r\n                Generate\r\n              </Button>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              {imageUrl ? (\r\n                <a href={imageUrl} download>\r\n                  <img src={imageUrl} alt=\"img\" />\r\n                </a>\r\n              ) : null}\r\n            </Grid>\r\n            <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\r\n              <Button\r\n                className={classes.btn}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={onScanFile}\r\n              >\r\n                Scan Qr Code\r\n              </Button>\r\n              <QrReader\r\n                ref={qrRef}\r\n                delay={300}\r\n                style={{ width: \"100%\" }}\r\n                onError={handleErrorFile}\r\n                onScan={handleScanFile}\r\n                legacyMode\r\n              />\r\n              <h3>Scanned Code: {scanResultFile}</h3>\r\n            </Grid>\r\n            <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\r\n              <h3>Qr Code Scan by Web Cam</h3>\r\n              <QrReader\r\n                delay={300}\r\n                style={{ width: \"100%\" }}\r\n                onError={handleErrorWebCam}\r\n                onScan={handleScanWebCam}\r\n              />\r\n              <h3>Scanned By WebCam Code: {scanResultWebCam}</h3>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  conatiner: {\r\n    marginTop: 10,\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    background: \"#3f51b5\",\r\n    color: \"#fff\",\r\n    padding: 20,\r\n  },\r\n  btn: {\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n}));\r\n\r\nexport default Qr;\r\n",["36","37"],{"ruleId":"38","severity":1,"message":"39","line":2,"column":50,"nodeType":"40","messageId":"41","endLine":2,"endColumn":54},{"ruleId":"38","severity":1,"message":"42","line":8,"column":3,"nodeType":"40","messageId":"41","endLine":8,"endColumn":12},{"ruleId":"38","severity":1,"message":"43","line":9,"column":3,"nodeType":"40","messageId":"41","endLine":9,"endColumn":9},{"ruleId":"38","severity":1,"message":"44","line":11,"column":8,"nodeType":"40","messageId":"41","endLine":11,"endColumn":14},{"ruleId":"38","severity":1,"message":"45","line":15,"column":10,"nodeType":"40","messageId":"41","endLine":15,"endColumn":14},{"ruleId":"38","severity":1,"message":"46","line":15,"column":16,"nodeType":"40","messageId":"41","endLine":15,"endColumn":23},{"ruleId":"38","severity":1,"message":"47","line":16,"column":10,"nodeType":"40","messageId":"41","endLine":16,"endColumn":18},{"ruleId":"38","severity":1,"message":"48","line":16,"column":20,"nodeType":"40","messageId":"41","endLine":16,"endColumn":31},{"ruleId":"38","severity":1,"message":"49","line":17,"column":10,"nodeType":"40","messageId":"41","endLine":17,"endColumn":24},{"ruleId":"38","severity":1,"message":"50","line":30,"column":9,"nodeType":"40","messageId":"41","endLine":30,"endColumn":24},{"ruleId":"38","severity":1,"message":"51","line":33,"column":9,"nodeType":"40","messageId":"41","endLine":33,"endColumn":23},{"ruleId":"38","severity":1,"message":"52","line":38,"column":9,"nodeType":"40","messageId":"41","endLine":38,"endColumn":19},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'Button' is defined but never used.","'QRCode' is defined but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'scanResultFile' is assigned a value but never used.","'handleErrorFile' is assigned a value but never used.","'handleScanFile' is assigned a value but never used.","'onScanFile' is assigned a value but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-global-assign","no-unsafe-negation"]